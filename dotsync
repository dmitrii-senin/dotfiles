#!/bin/zsh

sync_root=${0:A:h}

loglevels=(dbg inf wrn err)
loglevel=$loglevels[(i)${LOGLEVEL:-inf}]

function crt() { [ $loglevel -le $loglevels[(i)crt] ] && echo "[CRT] " $* && exit 1; }
function err() { [ $loglevel -le $loglevels[(i)err] ] && echo "[ERR] " $*; }
function wrn() { [ $loglevel -le $loglevels[(i)wrn] ] && echo "[WRN] " $*; }
function inf() { [ $loglevel -le $loglevels[(i)inf] ] && echo "[INF] " $*; }
function dbg() { [ $loglevel -le $loglevels[(i)dbg] ] && echo "[DBG] " $*; }

function get_sync_paths() {
	local dotsync_path="$sync_root/.dotsync-config"
	if [ -f "$dotsync_path" ]; then
		sync_paths=( $( grep -v '^[[:space:]]*$' "$dotsync_path" ) )
	else
		crt "Cannot find '$dotsync_path'"
	fi
}

function get_ignore_paths() {
	local dotsync_ignore_path="$sync_root/.dotsync-ignore"
	if [ -f "$dotsync_ignore_path" ]; then
		ignore_paths=( $( grep -v '^[[:space:]]*$' "$dotsync_ignore_path" ) )
	else
		crt "Cannot find '$dotsync_ignore_path'"
	fi
}

function is_path_ignored() {
	local sync_path="$1"
	grep -f <( print -rl $ignore_paths ) -q <<< "$sync_path" && echo -n "ignored"
}

function make_dirs() {
	local sync_path
	for sync_path in ${sync_paths[@]}; do
		local dst_path="$HOME/${sync_path:0:-2}"
		if [ "${sync_path: -2}" = '/*' -a ! -d "$dst_path" ]; then
			inf "Creating dir '$dst_path' ..."
			mkdir -p "$dst_path" || err "Cannot create dir '$dst_path'"
		fi
	done
}

function make_links() {
	local sync_path
	for sync_path in ${sync_paths[@]}; do
		if [ "${sync_path: -2}" = '/*' ]; then
			link_dir_content "${sync_path:0:-2}"
		else
			try_make_link "$sync_path"
		fi
	done
}

function try_make_link() {
	local sync_path="$1"
	if [ "$(is_path_ignored "$sync_path")" != "ignored" ]; then
		local src_path="$sync_root/$sync_path"
		local dst_path="$HOME/$sync_path"
		make_link "$sync_path" "$src_path" "$dst_path"
	else
		dbg "path '$sync_path' was ignored"
	fi
}

function make_link() {
	local sync_path="$1"
	local src_path="$2"
	local dst_path="$3"
	if [ ! -e "$dst_path" ]; then
		inf "Creating link '$dst_path' => '$src_path' ..."
		ln -s "$src_path" "$dst_path" || err "Cannot create link '$dst_path' => '$src_path'"
	elif [ -L "$dst_path" -a ! "$dst_path" -ef "$src_path" ]; then
		wrn "Link '$dst_path' exists and points to a different location"
	elif [ -d "$src_path" -a -d "$dst_path" ]; then
		dbg "Dir '$dst_path' exists: try to link children files ..."
		link_dir_content "$sync_path"
	fi
}

function link_dir_content() {
	local sync_dirpath="$1"
	local filename
	for filename in $( ls -A "$sync_root/$sync_dirpath" ); do
		try_make_link "$sync_dirpath/$filename"
	done
}

get_sync_paths
get_ignore_paths
make_dirs
make_links
